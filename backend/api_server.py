"""
API –î–õ–Ø –ë–†–ê–£–ó–ï–†–ù–û–ì–û –†–ê–°–®–ò–†–ï–ù–ò–Ø
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–≤—è–∑—å –º–µ–∂–¥—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º Chrome –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL
"""

from flask import Flask, request, jsonify
from db_manager import DatabaseManager
from flask_cors import CORS  # –î–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º CORS –∑–∞–ø—Ä–æ—Å—ã –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = DatabaseManager(
  host='localhost',
  database='spoiler_blocker', 
  user='postgres',
  password='postgres'  
)

@app.route('/')
def home():
  """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API —Å–µ—Ä–≤–µ—Ä–∞"""
  return jsonify({
    'message': 'SpoilerBlocker API Server',
    'version': '0.01',
    'endpoints': {
      '/api/keywords': 'GET - –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞',
      '/api/block': 'POST - –∑–∞–ø–∏—Å–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É', 
      '/api/stats': 'GET - –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É'
    }
  })

@app.route('/api/keywords', methods=['GET'])
def get_keywords():
  """
  API –≠–ù–î–ü–û–ò–ù–¢: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  """

  try:
    logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    keywords_data = db.get_all_keywords()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç JSON –¥–ª—è JavaScript
    keywords_list = []
    for keyword in keywords_data:
        keyword_id, keyword_text, category_name, severity_level = keyword
        keywords_list.append({
          'id': keyword_id,
          'text': keyword_text,
          'category': category_name,
          'severity': severity_level
        })
    
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(keywords_list)} –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
    
    return jsonify({
      'success': True,
      'keywords': keywords_list,
      'count': len(keywords_list)
    })
  
  except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /api/keywords: {e}")
    return jsonify({
      'success': False, 
      'error': str(e)
    }), 500
  
@app.route('/api/block', methods=['POST'])
def log_block():
  """
  API –≠–ù–î–ü–û–ò–ù–¢: –ó–∞–ø–∏—Å–∞—Ç—å —Ñ–∞–∫—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–ø–æ–π–ª–µ—Ä–∞
  –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–ø–æ–π–ª–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  """

  try:
    # –ü–æ–ª—É—á–∞–µ–º JSON –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    data = request.json
    logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {data}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    success = db.log_blocked_content(
      user_id = data.get('user_id', 1),  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é user_id=1
      keyword_id = data.get('keyword_id'),
      url = data.get('url', ''),
      blocked_content = data.get('content', '')[:500]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
    )
    
    if success:
      logger.info("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
      return jsonify({'success': True})
    
    else:
      logger.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –ë–î")
      return jsonify({'success': False, 'error': 'Database error'})
  
  except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /api/block: {e}")
    return jsonify({
      'success': False, 
      'error': str(e)
    }), 500
  
@app.route('/api/stats', methods=['GET'])
def get_stats():
  """
  API –≠–ù–î–ü–û–ò–ù–¢: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –æ–∫–Ω–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  """

  try:
    # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
    user_id = request.args.get('user_id', 1, type=int)
    logger.info(f"–ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    stats = db.get_user_stats(user_id)
    
    if stats:
      logger.info(f" –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
      return jsonify({
        'success': True, 
        'stats': stats
      })
    
    else:
      # –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–ª–∏
      return jsonify({
        'success': True,
        'stats': {
          'total_blocks': 0,
          'unique_keywords_blocked': 0,
          'last_blocked': None
        }
      })
  
  except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /api/stats: {e}")
    return jsonify({
      'success': False, 
      'error': str(e)
    }), 500
  
@app.route('/api/health', methods=['GET'])
def health_check():
  """
  API –≠–ù–î–ü–û–ò–ù–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
  """

  return jsonify({
    'status': 'healthy',
    'service': 'SpoilerBlocker API',
    'database': 'connected' if db.connection else 'disconnected'
  })

if __name__ == '__main__':
  print("üöÄ –ó–∞–ø—É—Å–∫ SpoilerShield API —Å–µ—Ä–≤–µ—Ä–∞...")
  print("üìç –ê–¥—Ä–µ—Å: http://localhost:5000")
  print("üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
  print("   GET  /api/keywords - –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
  print("   POST /api/block    - –∑–∞–ø–∏—Å—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –ª–æ–≥") 
  print("   GET  /api/stats    - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫")
  print("   GET  /api/health   - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞")
  print("\n‚ö° –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
  
  # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
  app.run(
    host='localhost',  # –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
    port=5000,        # –ü–æ—Ä—Ç –¥–ª—è API —Å–µ—Ä–≤–µ—Ä–∞
    debug=True        # –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ (–≤—ã–∫–ª—é—á–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
  )